<link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin=""/>
<script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.css" rel="stylesheet" type="text/css">
<h1 style="text-align: center; font-size: 40px;">Weather</h1>
<%# <script src="https://cdn.jsdelivr.net/npm/vue"></script> %>
<div id="app">
  <div class="columns">
    <div class="column">
      <div id="input">
        <label style="margin: 0 auto; width: 500px; height: 0px; display: block;">Search</label>
        <input type="text" v-model="search" v-on:change="updatesearch"></input>
      </div>
      <div id="search" v-if="searchresultslength > 0">
        <table v-for="result in searchresults">
          <tr>
            <td>{{ result.description }}</td>
          </tr>
        </table>
      </div>
      <div id="mainmap"></div>
    </div>
    <div class="column is-one-third">
    </div>
  </div>
</div>

<script src="https://unpkg.com/vue@2.1.10/dist/vue.js"></script>
<script>
  var vm = new Vue({
    el: '#app',
    data: {
      map: null,
      longitude: 0,
      latitude: 0,
      zoom: 12,
      tileLayer: null,
      layers: [],
      search: '',
      searchresults: null,
      searchresultslength: 0,
    },
    methods: {
      updatesearch: function() {
        $.getJSON('/maps/?input='+this.search, (data) => {
          console.log(data);
          this.searchresults = data['predictions'];
          this.searchresultslength = data['predictions'].length;

        }) 
      }
    },
    mounted() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position) => {
          this.latitude = position.coords.latitude;
          this.longitude = position.coords.longitude;
          this.map = L.map('mainmap').setView([this.latitude, this.longitude], this.zoom);
          this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
            maxZoom: 18,
            id: 'mainmap',
            accessToken: '<%= @apikey %>',
      });
      this.tileLayer.addTo(this.map);
        });
      } else {
        this.map = L.map('mainmap').setView([this.latitude, this.longitude], this.zoom);
        this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
          maxZoom: 18,
          id: 'mainmap',
          accessToken: '<%= @apikey %>',
        });
        this.tileLayer.addTo(this.map);
      }
    },
  });
</script>
